import type { {{#if hasAction}}ActionFunction, {{/if}}{{#if hasLinks}}LinksFunction, {{/if}}{{#if hasLoader}}LoaderFunction, {{/if}}{{#if hasMeta}}MetaFunction{{/if}} } from "@remix-run/node";
{{#if hasLoader}}import { redirect } from "@remix-run/node";{{/if}}
import { Outlet, useLoaderData, {{#if hasLoader}}json, {{/if}}Link } from "@remix-run/react";

type {{ pascalCase name }}Data = {
    greeting: string;
};

{{#if hasLoader}}
export const loader: LoaderFunction = () => {
    return json({
        greeting: 'Howdy'
    });
};

{{/if}}
{{#if hasAction}}
export const action: ActionFunction = async ({ request }) => {
    const formData = await request.formData();

    // const firstName = formData.get("firstName");
    // await createPost({ firstName });

    return redirect('/your-url');
};

{{/if}}
{{#if hasMeta}}
export const meta: MetaFunction = () => {
    return {
        title: 'Remix Starter',
        description: 'Welcome to remix!'
    };
};

{{/if}}
{{#if hasLinks}}
export const links: LinksFunction = () => {
    return [{ rel: "stylesheet", href: '' }];
};

{{/if}}
export default function {{ pascalCase name }}Route() {
    const data = useLoaderData<{{ pascalCase name }}Data>();

    return (
        <div>
            <h2>{{ sentenceCase name }}</h2>
            {JSON.stringify(data, null, 4)}
            <Outlet />
            <Link to="/">Go back</Link>
        </div>
    );
}
